# Generated by Django 4.2.16 on 2025-09-23 19:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('assets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_username', message='Username must be 3-100 chars and contain only letters, numbers, underscores or hyphens.', regex='^[a-zA-Z0-9_-]{3,100}$')])),
                ('first_name', models.CharField(blank=True, default='', max_length=100)),
                ('last_name', models.CharField(blank=True, default='', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('customer', 'Customer'), ('seller', 'Seller'), ('admin', 'Admin'), ('moderator', 'Moderator'), ('helper', 'Helper'), ('editor', 'Editor')], default='customer', max_length=20)),
                ('verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('otpauth_url', models.CharField(blank=True, max_length=225, null=True)),
                ('otp_base32', models.CharField(blank=True, max_length=255, null=True)),
                ('otp_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('otp_last_counter', models.BigIntegerField(blank=True, null=True)),
                ('login_otp', models.CharField(blank=True, max_length=255, null=True)),
                ('login_otp_used', models.BooleanField(default=False)),
                ('otp_created_at', models.DateTimeField(blank=True, null=True)),
                ('login_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('qr_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_qr_codes', to='assets.media')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'indexes': [models.Index(django.db.models.functions.text.Lower('email'), name='idx_user_email_ci'), models.Index(django.db.models.functions.text.Lower('username'), name='idx_user_username_ci'), models.Index(fields=['created_at'], name='authenticat_created_a1eec4_idx'), models.Index(fields=['login_ip'], name='authenticat_login_i_b70bc1_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='useraccount',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('email'), name='uniq_user_email_ci'),
        ),
        migrations.AddConstraint(
            model_name='useraccount',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('username'), name='uniq_user_username_ci'),
        ),
    ]
